<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.amazonaws.samples</groupId>
    <artifactId>aws-java-sample</artifactId>
    <version>1.0</version>
    <packaging>jar</packaging>

    <name>aws-java-sample</name>
    <url>http://aws.amazon.com/sdkforjava</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk</artifactId>
            <version>1.9.6</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${env.HOME}/.aws/</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>com.amazonaws.samples.S3Sample</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>



package com.amazonaws.samples;

import java.util.ArrayList;
import java.util.List;

import com.amazonaws.ClientConfiguration;
import com.amazonaws.auth.AWSCredentials;
import com.amazonaws.auth.BasicAWSCredentials;
import com.amazonaws.services.route53.AmazonRoute53;
import com.amazonaws.services.route53.AmazonRoute53Client;
import com.amazonaws.services.route53.model.Change;
import com.amazonaws.services.route53.model.ChangeAction;
import com.amazonaws.services.route53.model.ChangeBatch;
import com.amazonaws.services.route53.model.ChangeResourceRecordSetsRequest;
import com.amazonaws.services.route53.model.ChangeResourceRecordSetsResult;
import com.amazonaws.services.route53.model.ListResourceRecordSetsRequest;
import com.amazonaws.services.route53.model.ListResourceRecordSetsResult;
import com.amazonaws.services.route53.model.RRType;
import com.amazonaws.services.route53.model.ResourceRecord;
import com.amazonaws.services.route53.model.ResourceRecordSet;

public class Route53Sample {

	private static AmazonRoute53Client getAmazonRoute53Client() {
		String aWSAccessId = "AKIAJIHAMAQSFWKKTB2Q";
		String aWSSecretKey = "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";

		AWSCredentials credentials = new BasicAWSCredentials(aWSAccessId, aWSSecretKey);
		AmazonRoute53Client route53 = new AmazonRoute53Client(credentials);
		return route53;
	}

	public static void main(String[] args) {
		System.out.println("to create client");
		AmazonRoute53Client route53 = getAmazonRoute53Client();
		String hostedZoneID = "Z3MNENJUQP841O";
		{
			System.out.println("to list resource");
			ListResourceRecordSetsRequest listResourceRecordSetsRequest = new ListResourceRecordSetsRequest()
					.withHostedZoneId(hostedZoneID);
			// .withStartRecordType(RRType.SRV);
			ListResourceRecordSetsResult listResourceRecordSetsResult = route53
					.listResourceRecordSets(listResourceRecordSetsRequest);

			System.out.println("result : " + listResourceRecordSetsResult.toString());
		}

		if (false) {
			ChangeResourceRecordSetsRequest request = new ChangeResourceRecordSetsRequest()
					// Depends on the type of resource that you want to route traffic to
					.withHostedZoneId(hostedZoneID)
					.withChangeBatch(
							new ChangeBatch().withComment("add sip SRV james to ngdesk.com").withChanges(
									new Change().withAction("CREATE").withResourceRecordSet(
											new ResourceRecordSet().withName("_sip._tls.james.")
													.withType("SRV").withResourceRecords(
															new ResourceRecord()
																	.withValue("100 1 5061 webrtc-da3-1.ngdesk.com"))),
									new Change().withAction("CREATE").withResourceRecordSet(
											new ResourceRecordSet().withName("_sip._udp.james.")
													.withType("SRV").withResourceRecords(
															new ResourceRecord().withValue(
																	"100 1 5060 webrtc-da3-1.ngdesk.com")))));
			ChangeResourceRecordSetsResult result = route53.changeResourceRecordSets(request);
			System.out.println("change record, result : " + result.toString());
		}

		if (false) {
			ResourceRecord rr = new ResourceRecord("100 1 5061 webrtc-da3-1.ngdesk.com");
			List<ResourceRecord> rrList = new ArrayList<ResourceRecord>();
			rrList.add(rr);

			// Create a ResourceRecordSet
			ResourceRecordSet resourceRecordSet = new ResourceRecordSet();
			resourceRecordSet.setName("_sip._tls.james.ngdesk.com."); // domainName is String value of your domain
			resourceRecordSet.setType(RRType.SRV); // type of ResourceRecordSet
			resourceRecordSet.setTTL(new Long(300));
			resourceRecordSet.setWeight(new Long(0));
			resourceRecordSet.setResourceRecords(rrList);

			// Create a change
			Change change = new Change(ChangeAction.CREATE, resourceRecordSet);
			List<Change> changesList = new ArrayList<Change>();
			changesList.add(change);

			// Create a change batch
			ChangeBatch changeBatch = new ChangeBatch(changesList);

			// Create ChangeResourceRecordSetRequest.
			ChangeResourceRecordSetsRequest request = new ChangeResourceRecordSetsRequest(hostedZoneID, changeBatch);
			// hostedZoneId is variable that is the id of HostedZone

			// Send the request and get the response.
			ChangeResourceRecordSetsResult result = route53.changeResourceRecordSets(request);

			// Print the result
			System.out.println(result.getChangeInfo());
		}

		if (false) {
			ResourceRecord rr = new ResourceRecord("192.168y.0.1");
			List<ResourceRecord> rrList = new ArrayList<ResourceRecord>();
			rrList.add(rr);

			// Create a ResourceRecordSet
			ResourceRecordSet resourceRecordSet = new ResourceRecordSet();
			resourceRecordSet.setName("james.ngdesk.com."); // domainName is String value of your domain
			resourceRecordSet.setType(RRType.A); // type of ResourceRecordSet
			resourceRecordSet.setTTL(new Long(300));
			resourceRecordSet.setWeight(new Long(0));
			resourceRecordSet.setResourceRecords(rrList);

			// Create a change
			// Change change = new Change(ChangeAction.CREATE, resourceRecordSet);
			Change change = new Change(ChangeAction.UPSERT, resourceRecordSet);
			List<Change> changesList = new ArrayList<Change>();
			changesList.add(change);

			// Create a change batch
			ChangeBatch changeBatch = new ChangeBatch(changesList);

			// Create ChangeResourceRecordSetRequest.
			ChangeResourceRecordSetsRequest request = new ChangeResourceRecordSetsRequest(hostedZoneID, changeBatch);
			// hostedZoneId is variable that is the id of HostedZone

			// Send the request and get the response.
			ChangeResourceRecordSetsResult result = route53.changeResourceRecordSets(request);

			// Print the result
			System.out.println(result.getChangeInfo());
		}

		if (false) {
			// AmazonRoute53 route53 = AmazonRoute53ClientBuilder.standard() //
			// .withRegion(REGION) //
			// .withCredentials(new AWSStaticCredentialsProvider(new
			// BasicAWSCredentials(ACCESS_KEY, SECRET_KEY)))
			// .build();

			ResourceRecordSet recordSet = new ResourceRecordSet() //
					.withType(RRType.A) //
					.withName("testing.ngdesk.com") //
					.withTTL(300L) //
					.withResourceRecords(new ResourceRecord().withValue("1.2.3.4"));

			Change change = new Change() //
					.withAction(ChangeAction.UPSERT) //
					.withResourceRecordSet(recordSet);

			// Send the request and get the response.
			ChangeResourceRecordSetsResult result = route53.changeResourceRecordSets(new ChangeResourceRecordSetsRequest() //
					.withHostedZoneId(hostedZoneID) //
					.withChangeBatch(new ChangeBatch().withChanges(change)));

			// Print the result
			System.out.println(result.getChangeInfo());
		}

		if (true) {
			// AmazonRoute53 route53 = AmazonRoute53ClientBuilder.standard() //
			// .withRegion(REGION) //
			// .withCredentials(new AWSStaticCredentialsProvider(new
			// BasicAWSCredentials(ACCESS_KEY, SECRET_KEY)))
			// .build();

			System.out.println("try to insert (UPSERT) new SRV record");
			
			ResourceRecordSet recordSet = new ResourceRecordSet() //
					.withType(RRType.SRV) //
					.withName("_sip._tls.james.ngdesk.com") //
					.withTTL(300L) //
					.withResourceRecords(new ResourceRecord().withValue("100 1 5061 webrtc-da3-1.ngdesk.com"));

			Change change = new Change() //
					.withAction(ChangeAction.UPSERT) //
					.withResourceRecordSet(recordSet);

			// Send the request and get the response.
			ChangeResourceRecordSetsResult result = route53.changeResourceRecordSets(new ChangeResourceRecordSetsRequest() //
					.withHostedZoneId(hostedZoneID) //
					.withChangeBatch(new ChangeBatch().withChanges(change)));

			// Print the result
			System.out.println(result.getChangeInfo());
		}

	}

}

